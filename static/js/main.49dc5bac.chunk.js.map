{"version":3,"sources":["assets/images/user.jpg","components/Navbar/NavBar.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","assets/images/preloader.svg","components/common/FormsControls/FormsControls.js","serviceWorker.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Users/Users.module.css","components/Header/Header.module.css","redux/profile-reducer.js","api/api.js","redux/dialogs-reducer.js"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","Boolean","window","location","hostname","match","initialState","sidebarReducer","state","action","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","type","unfollowSucces","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","count","filter","id","email","login","isAuth","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","authAPI","me","response","getCaptchaUrl","securityAPI","url","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","s","nav","item","to","activeClassName","activeLink","frStyle","News","column","Music","playlist","Settings","params","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","p","selectedPage","pageNumber","key","e","User","user","unfollow","follow","friends","src","photos","small","usersPhoto","disabled","some","status","Users","getUsersSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","React","Component","this","getUsers","componentDidMount","render","Preloader","connect","usersAPI","bind","totalCount","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","reduxForm","handleSubmit","onSubmit","required","style","formSummaryError","password","rememberMe","captcha","message","messages","length","stopSubmit","_error","formData","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","AppContainer","withRouter","promise","Promise","all","then","SamuraiJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","getProfile","getStatus","profileAPI","updateStatus","savePhoto","file","saveProfile","getState","reject","newPost","postId","instance","Axios","create","withCredentials","baseURL","headers","get","post","delete","console","warn","put","photoFile","FormData","append","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.49dc5bac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.a7a21bf1.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3ocuz\",\"item\":\"NavBar_item__1oVAR\",\"activeLink\":\"NavBar_activeLink__2Y0oH\",\"frStyle\":\"NavBar_frStyle__1h7Cs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"News_column__3vg-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playlist\":\"Music_playlist__3Juat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"params\":\"Settings_params__26hRP\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.f481902e.svg\";","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const FormControl = ({ input, meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let initialState = {};\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n    \r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSucces = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(actionCreator(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSucces);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { authAPI, securityAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'samurai-network/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n});\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({\r\n    type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl }\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", { _error: message }));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData(null, null, null, false));\r\n    } /* if (response.data.resultCode === 0) { window.location.reload() } */\r\n}\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSucces = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSucces());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import { applyMiddleware, createStore, combineReducers, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.frStyle}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.column}>\r\n            <p>News</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.playlist}>\r\n            <p>Music</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.params}>\r\n            <p>Settings</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n\r\n/* import React from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n            {pages.map(p => {\r\n                return <span className={currentPage === p && s.selectedPage}\r\n                    onClick={(e) => { \r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        </div>\r\n        \r\n}\r\n\r\nexport default Paginator; */","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport usersPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={s.friends}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : usersPhoto}\r\n                            className={s.usersPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {unfollow(user.id) }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {follow(user.id) }}>\r\n                            Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div> {user.name} </div>\r\n                    <div> {user.status} </div>\r\n                </span>\r\n                <span>\r\n                    <div> {\"user.location.country\"} </div>\r\n                    <div> {\"user.location.city\"} </div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSimple = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n export const getUsersSelector = createSelector(getUsersSimple, \r\n    (users) => {\r\n        \r\n    return users.filter(u => true);\r\n })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/users-reducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getUsersSelector, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress }\r\n    from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers })\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        \r\n        <div className={s.loginBlock}>\r\n            { props.isAuth \r\n            ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n            : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst matStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default connect(matStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            { captchaUrl && <img src={captchaUrl}/> }\r\n            { captchaUrl && createField(\"Symbol from image\", \"captcha\", [required], Input, {}) }\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n}","import React, { Component, Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter, BrowserRouter, Switch, Redirect } from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\n//import ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport store from './redux/redux-store';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n\r\n/*   catchAllUnhandleErrors = (reason, promise) => {\r\n    alert(\"Some error occured\");\r\n  }\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandleErrors);\r\n  }\r\n */\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='app-wrapper-content'>\r\n          <Switch>\r\n            {/* <Route exact path='/'\r\n              render={() => <Redirect to={\"/profile\"} />} /> */}\r\n            <Route path='/profile/:userId?'\r\n              render={withSuspense(ProfileContainer)} />\r\n            <Route path='/dialogs'\r\n              render={withSuspense(DialogsContainer)} />\r\n            <Route path='/news' render={() => <News />} />\r\n            <Route path='/music' render={() => <Music />} />\r\n            <Route path='/settings' render={() => <Settings />} />\r\n            <Route path='/users' render={() => <UsersContainer />} />\r\n            <Route path='/login' render={() => <LoginPage />} />\r\n            <Route path='*' render={() => <div>404 NOT FOUND</div>} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n  return <BrowserRouter>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport SamuraiJSApp from './App';\r\n\r\n    ReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div style ={ {  } } >\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2CyPl\",\"error\":\"FormsControls_error__2jkR9\",\"formSummaryError\":\"FormsControls_formSummaryError__2J01z\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3HPd3\",\"pageNumber\":\"Paginator_pageNumber__I_red\",\"selectedPage\":\"Paginator_selectedPage__282uw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Users_friends__2uVsD\",\"usersPhoto\":\"Users_usersPhoto__2J9N1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Wd6r\",\"loginBlock\":\"Header_loginBlock__3-jD0\"};","import { usersAPI, profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how arre yoy?', likesCount: 12 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 13 },\r\n        { id: 3, message: 'Azaza', likesCount: 8 },\r\n        { id: 4, message: 'lol kek lul', likesCount: 12 },\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return { ...state, posts: state.posts.filter(p => p.id != action.postId) }\r\n\r\n        case SAVE_PHOTO_SUCCESS:\r\n            return { ...state, profile: { ...state.profile, photos: action.photos } }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\nexport const savePhotoSuccess = (photos) => ({ type: SAVE_PHOTO_SUCCESS, photos })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    try {\r\n        const response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    } catch (error) {\r\n        //\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId;\r\n    const response = await profileAPI.saveProfile(profile);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    } else {\r\n        dispatch(stopSubmit(\"edit-profile\", { _error: response.data.messages[0] }));\r\n        //dispatch(stopSubmit(\"edit-profile\", {\"contacts\": {\"facebook\": response.data.messages[0]} }));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: { \"API-KEY\": \"74435572-4a35-461a-9d76-044724160d14\" }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status});\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captha-url');\r\n    }\r\n}","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Anton' },\r\n        { id: 2, name: 'Dima' },\r\n        { id: 3, name: 'Alex' },\r\n        { id: 4, name: 'Lexa' },\r\n        { id: 5, name: 'Sveta' },\r\n        { id: 6, name: 'Lera' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How is your' },\r\n        { id: 3, message: 'Yo' },\r\n        { id: 4, message: 'thanks' },\r\n        { id: 5, message: 'What?' }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}