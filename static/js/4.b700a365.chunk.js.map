{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Name&Id/NameAndId.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","NameAndId","props","path","id","className","s","dialog","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","formAddText","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","active","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,+B,8FCYvKC,MATIC,IAEf,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,yBAAKC,UAAWC,IAAEC,QACjB,kBAAC,IAAD,CAASC,GAAIL,GAAb,IAAqBD,EAAMO,KAA3B,OCAGC,MANER,GACN,yBAAKG,UAAWC,IAAEC,QACnBL,EAAMS,S,iCCChB,MAAMC,EAAcC,YAAiB,IActBC,kBAAU,CAAEC,KAAM,wBAAlBD,CAZSZ,GAEhB,0BAAMc,SAAUd,EAAMe,aAAcZ,UAAWC,IAAEY,aAC7C,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAC7CH,KAAK,iBAAiBe,YAAY,uBACtC,6BACI,2CCuBDC,MA7BEvB,IAEb,IAAIwB,EAAQxB,EAAMyB,YAGdC,EAAkBF,EAAMG,QAAQC,IAAIC,GAAK,kBAAC,EAAD,CAAWtB,KAAMsB,EAAEtB,KAAMuB,IAAKD,EAAE3B,GAAIA,GAAI2B,EAAE3B,MACnF6B,EAAmBP,EAAMQ,SAASJ,IAAIK,GAAK,kBAAC,EAAD,CAASxB,QAASwB,EAAExB,QAASqB,IAAKG,EAAE/B,MAC9DsB,EAAMU,eAQ3B,OACI,yBAAK/B,UAAWC,IAAEC,OAAS,IAAMD,IAAE+B,QAC/B,yBAAKhC,UAAWC,IAAEgC,cACbV,GAGL,yBAAKvB,UAAWC,IAAE4B,UACd,6BAAMD,IAEV,kBAAC,EAAD,CAAgBjB,SAfHuB,IACjBrC,EAAMsC,YAAYD,EAAOH,qB,wBCGlBK,sBACXC,YAfmBhB,IACZ,CACHC,YAAaD,EAAMC,cAIDgB,IACf,CACHH,YAAcJ,IACVO,EAASC,YAAmBR,QAOpCS,IAFWJ,CAGZhB","file":"static/js/4.b700a365.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__27YNL\",\"dialogsItems\":\"Dialogs_dialogsItems__1gAtV\",\"active\":\"Dialogs_active__2zO3K\",\"messages\":\"Dialogs_messages__3QMzH\",\"formAddText\":\"Dialogs_formAddText__12vjo\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NameAndId = (props) => {\r\n\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog}>\r\n            <NavLink to={path}> {props.name} </NavLink>\r\n         </div>\r\n}\r\n\r\nexport default NameAndId;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>\r\n         {props.message} \r\n         </div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from '../Dialogs.module.css';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.formAddText}>\r\n            <Field component={Textarea} validate={[required, maxLength50]}\r\n                name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport NameAndId from './Name&Id/NameAndId';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    // let imageElement = state.images.map( img => <ImageAvatar />);\r\n    let dialogsElements = state.dialogs.map(d => <NameAndId name={d.name} key={d.id} id={d.id} />);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id} />);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    //if (!props.isAuth) return <Redirect to={\"/login\"} />\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs; ","import React from 'react';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}