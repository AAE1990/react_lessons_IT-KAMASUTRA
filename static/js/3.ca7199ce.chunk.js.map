{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Posts.module.css","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","React","Component","ProfileStatus","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Posts","item","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPosts","memo","postElements","posts","reverse","map","p","postsBlock","values","addPost","newPostText","post","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","componentDidMount","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","render","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.ca7199ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3a9AH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__9TYoY\",\"post\":\"MyPosts_post__XI9J1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__1olYd\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        });\r\n    }\r\n\r\n    deactivateEditMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        });\r\n        this.props.updateStatus(this.state.status);\r\n    }\r\n\r\n    onStatusChange = (e) => {\r\n        this.setState( {\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-----\"}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={true}\r\n                            onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useState, useEffect } from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status] );\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} \r\n                    onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large} />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Posts.module.css';\r\n\r\nconst Posts = (props) => {\r\n\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/be/bedd1c43a23171579086474638f5a9d2249a765a_medium.jpg' />\r\n      {props.message}\r\n      <div>\r\n        <span>like</span> {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Posts;","import React, { Component } from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Posts from './Post/Posts';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from \"../../../utils/validators/validators\"\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport { render } from 'react-dom';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea} name=\"newPostText\"\r\n          placeholder={\"Post message\"} validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postElements = \r\n      [...props.posts].reverse().map(p => <Posts message={p.message} likesCount={p.likesCount} />);\r\n\r\n    //let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n      <div className={s.postsBlock}>\r\n        <h3>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className={s.post}>\r\n          {postElements}\r\n        </div>\r\n      </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n        updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter) (ProfileContainer);"],"sourceRoot":""}