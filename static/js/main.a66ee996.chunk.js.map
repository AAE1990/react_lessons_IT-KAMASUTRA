{"version":3,"sources":["components/Navbar/NavBar.module.css","components/News/News.module.css","components/Music/Music.module.css","components/Settings/Settings.module.css","assets/images/user.jpg","assets/images/preloader.svg","api/api.js","serviceWorker.js","redux/sidebar-reducer.js","utils/object-helpers.js","redux/users-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Users/Users.module.css","components/Header/Header.module.css","redux/profile-reducer.js","redux/dialogs-reducer.js"],"names":["module","exports","instance","Axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","initialState","sidebarReducer","state","action","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","type","unfollowSucces","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","id","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","className","s","nav","item","to","activeClassName","activeLink","frStyle","News","column","Music","playlist","Settings","params","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","friends","src","photos","small","usersPhoto","disabled","some","name","Users","props","getUsersSelector","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","React","Component","this","componentDidMount","render","Preloader","connect","bind","totalCount","Header","header","loginBlock","HeaderContainer","reload","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","message","messages","length","stopSubmit","_error","formData","withSuspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost","postId","dialogs","sendMessageCreator","newMessageBody","body"],"mappings":"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","file":"static/js/main.a66ee996.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__3ocuz\",\"item\":\"NavBar_item__1oVAR\",\"activeLink\":\"NavBar_activeLink__2Y0oH\",\"frStyle\":\"NavBar_frStyle__1h7Cs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"News_column__3vg-L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playlist\":\"Music_playlist__3Juat\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"params\":\"Settings_params__26hRP\"};","module.exports = __webpack_public_path__ + \"static/media/user.a7a21bf1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/preloader.f481902e.svg\";","import Axios from \"axios\";\r\n\r\nconst instance = Axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: { \"API-KEY\": \"74435572-4a35-461a-9d76-044724160d14\" }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, { status: status});\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","let initialState = {};\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n    \r\n}\r\n\r\nexport default sidebarReducer;","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSucces = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalUsersCount) => ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n        let data = await usersAPI.getUsers(currentPage, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n            if (response.data.resultCode == 0) {\r\n                dispatch(actionCreator(userId));\r\n            }\r\n            dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSucces);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import { authAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        { userId, email, login, isAuth }\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let { id, email, login } = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", { _error: message }));\r\n            }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData(null, null, null, false));\r\n            } if (response.data.resultCode === 0) { window.location.reload() }\r\n}\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSucces = () => ({ type: INITIALIZED_SUCCESS });\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    //dispatch(somethingelse());\r\n    //dispatch(somethingelse());\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(initializedSucces());\r\n    });\r\n}\r\n\r\n\r\nexport default appReducer;","import { applyMiddleware, createStore, combineReducers, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './NavBar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.activeLink}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.frStyle}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div className={s.column}>\r\n            <p>News</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div className={s.playlist}>\r\n            <p>Music</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.params}>\r\n            <p>Settings</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n\r\n/* import React from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged}) => {\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return <div>\r\n            {pages.map(p => {\r\n                return <span className={currentPage === p && s.selectedPage}\r\n                    onClick={(e) => { \r\n                        onPageChanged(p);\r\n                    }}>{p}</span>\r\n            })}\r\n        </div>\r\n        \r\n}\r\n\r\nexport default Paginator; */","import React from 'react';\r\nimport s from './Users.module.css';\r\nimport usersPhoto from '../../assets/images/user.jpg';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nlet User = ({ user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={s.friends}>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : usersPhoto}\r\n                            className={s.usersPhoto} />\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {unfollow(user.id) }}>\r\n                            Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                            onClick={() => {follow(user.id) }}>\r\n                            Follow</button>\r\n                    }\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div> {user.name} </div>\r\n                    <div> {user.status} </div>\r\n                </span>\r\n                <span>\r\n                    <div> {\"user.location.country\"} </div>\r\n                    <div> {\"user.location.city\"} </div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSimple = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\n export const getUsersSelector = createSelector(getUsersSimple, \r\n    (users) => {\r\n        \r\n    return users.filter(u => true);\r\n })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react';\r\nimport Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers } from '../../redux/users-reducer';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getUsersSelector, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress }\r\n    from '../../redux/users-selectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers })\r\n)(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        \r\n        <div className={s.loginBlock}>\r\n            { props.isAuth \r\n            ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n            : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport {logout} from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst matStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\nexport default connect(matStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, createField } from '../common/FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\nimport { connect } from 'react-redux';\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, { type: \"password\" })}\r\n            {createField(null, \"rememberMe\", [], Input, { type: \"checkbox\" }, \"remember me\")}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n        </Suspense>\r\n    };\r\n}","import React, { Component, Suspense } from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, withRouter, BrowserRouter } from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\n//import ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport LoginPage from './components/Login/Login';\r\nimport store from './redux/redux-store';\r\nimport { connect, Provider } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { withSuspense } from './hoc/withSuspense';\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className='app-wrapper-content'>\r\n          <Route path='/profile/:userId?'\r\n            render={withSuspense(ProfileContainer)} />\r\n          <Route path='/dialogs'\r\n            render={withSuspense(DialogsContainer)} />\r\n          <Route path='/news' render={() => <News />} />\r\n          <Route path='/music' render={() => <Music />} />\r\n          <Route path='/settings' render={() => <Settings />} />\r\n          <Route path='/users' render={() => <UsersContainer />} />\r\n          <Route path='/login' render={() => <LoginPage />} />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n\r\nconst SamuraiJSApp = (props) => {\r\n  return <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport SamuraiJSApp from './App';\r\n\r\n    ReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const FormControl = ({ input, meta: {touched, error}, children }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n            validate={validators}\r\n            component={component}\r\n            {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from 'react';\r\nimport preloader from '../../../assets/images/preloader.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div style ={ {  } } >\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2CyPl\",\"error\":\"FormsControls_error__2jkR9\",\"formSummaryError\":\"FormsControls_formSummaryError__2J01z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3HPd3\",\"pageNumber\":\"Paginator_pageNumber__I_red\",\"selectedPage\":\"Paginator_selectedPage__282uw\"};","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Users_friends__2uVsD\",\"usersPhoto\":\"Users_usersPhoto__2J9N1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Wd6r\",\"loginBlock\":\"Header_loginBlock__3-jD0\"};","import { usersAPI, profileAPI } from \"../api/api\";\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how arre yoy?', likesCount: 12 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 13 },\r\n        { id: 3, message: 'Azaza', likesCount: 8 },\r\n        { id: 4, message: 'lol kek lul', likesCount: 12 },\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n\r\n        case DELETE_POST: \r\n            return { ...state, posts: state.posts.filter(p => p.id != action.postId) }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n        dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId)     \r\n            dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatus(status));\r\n            }\r\n}\r\n\r\nexport default profileReducer;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Anton' },\r\n        { id: 2, name: 'Dima' },\r\n        { id: 3, name: 'Alex' },\r\n        { id: 4, name: 'Lexa' },\r\n        { id: 5, name: 'Sveta' },\r\n        { id: 6, name: 'Lera' }\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hi' },\r\n        { id: 2, message: 'How is your' },\r\n        { id: 3, message: 'Yo' },\r\n        { id: 4, message: 'thanks' },\r\n        { id: 5, message: 'What?' }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\nexport default dialogsReducer;"],"sourceRoot":""}